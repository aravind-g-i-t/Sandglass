import globals from "globals";
import pluginJs from "@eslint/js";

export default [
  {
    files: ["**/*.js"],
    languageOptions: {
      sourceType: "commonjs",
      globals: globals.node,
    },
    rules: {
      // Possible Errors
      "no-console": "warn", // Allow console for debugging, but warn
      "no-constant-condition": "error",
      "no-debugger": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-semi": "error",
      "no-func-assign": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-obj-calls": "error",
      "no-sparse-arrays": "error",
      "no-unexpected-multiline": "error",
      "no-unreachable": "error",
      "valid-typeof": "error",

      // Best Practices
      "array-callback-return": "error",
      "block-scoped-var": "error",
      "consistent-return": "error",
      "curly": ["error", "all"],
      "default-case": "error",
      "dot-notation": "error",
      "eqeqeq": ["error", "always"],
      "no-alert": "warn",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-empty-function": "error",
      "no-eval": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-floating-decimal": "error",
      "no-global-assign": "error",
      "no-implied-eval": "error",
      "no-invalid-this": "error",
      "no-iterator": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-loop-func": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-proto": "error",
      "no-redeclare": "error",
      "no-return-assign": "error",
      "no-script-url": "error",
      "no-self-assign": "error",
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-throw-literal": "error",
      "no-unused-expressions": "error",
      "no-useless-call": "error",
      "no-useless-concat": "error",
      "no-useless-escape": "error",
      "no-with": "error",
      "radix": "error",
      "wrap-iife": ["error", "inside"],
      "yoda": ["error", "never"],

      // Variables
      "no-delete-var": "error",
      "no-label-var": "error",
      "no-shadow-restricted-names": "error",
      "no-undef": "error",
      "no-unused-vars": ["error", { "args": "none" }],
      "no-use-before-define": ["error", { "functions": false, "classes": false }],

      // Node.js and CommonJS
      "callback-return": "error",
      "global-require": "error",
      "handle-callback-err": "error",
      "no-mixed-requires": ["error", { "grouping": true, "allowCall": true }],
      "no-new-require": "error",
      "no-path-concat": "error",
      "no-process-env": "off", // Typically used in Node.js applications
      "no-process-exit": "error",
      "no-sync": "warn",

      // Stylistic Issues
      "array-bracket-spacing": ["error", "never"],
      "block-spacing": ["error", "always"],
      "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
      "camelcase": ["error", { "properties": "never" }],
      "comma-dangle": ["error", "never"],
      "comma-spacing": ["error", { "before": false, "after": true }],
      "comma-style": ["error", "last"],
      "computed-property-spacing": ["error", "never"],
      "consistent-this": ["error", "self"],
      // "eol-last": ["error", "always"],
      "func-call-spacing": ["error", "never"],
      "indent": ["error", 4, { "SwitchCase": 1 }],
      "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
      "keyword-spacing": ["error", { "before": true, "after": true }],
      // "linebreak-style": ["error", "unix"],
      "max-depth": ["error", 4],
      // "max-len": ["error", 100],
      "max-nested-callbacks": ["error", 3],
      "max-params": ["error", 3],
      "new-cap": ["error", { "newIsCap": true, "capIsNew": false }],
      "new-parens": "error",
      "no-array-constructor": "error",
      "no-bitwise": "error",
      "no-continue": "error",
      "no-lonely-if": "error",
      "no-mixed-operators": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-multi-assign": "error",
      "no-negated-condition": "error",
      "no-nested-ternary": "error",
      "no-new-object": "error",
      "no-plusplus": "error",
      "no-tabs": "error",
      "no-trailing-spaces": "error",
      "no-unneeded-ternary": "error",
      "no-whitespace-before-property": "error",
      "object-curly-spacing": ["error", "always"],
      "one-var": ["error", "never"],
      "operator-linebreak": ["error", "after"],
      // "padded-blocks": ["error", "never"],
      "quote-props": ["error", "consistent-as-needed"],
      // "quotes": ["error", "single"],
      "semi": ["error", "always"],
      "semi-spacing": ["error", { "before": false, "after": true }],
      "space-before-blocks": ["error", "always"],
      // "space-before-function-paren": ["error", "never"],
      "space-in-parens": ["error", "never"],
      "space-infix-ops": "error",
      "space-unary-ops": ["error", { "words": true, "nonwords": false }],
      "spaced-comment": ["error", "always", { "exceptions": ["-"] }],
      "template-tag-spacing": ["error", "never"],
      "unicode-bom": ["error", "never"],

      // ECMAScript 6
      "arrow-spacing": ["error", { "before": true, "after": true }],
      "no-confusing-arrow": ["error", { "allowParens": true }],
      "no-duplicate-imports": "error",
      "no-useless-computed-key": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": ["error", {
        "ignoreDestructuring": false,
        "ignoreImport": false,
        "ignoreExport": false
      }],
      "no-var": "error",
      "object-shorthand": ["error", "always"],
      "prefer-arrow-callback": ["error", { "allowNamedFunctions": false }],
      "prefer-const": ["error", {
        "destructuring": "all",
        "ignoreReadBeforeAssign": true
      }],
      "prefer-numeric-literals": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "error",
      "rest-spread-spacing": ["error", "never"],
      "symbol-description": "error",
      "template-curly-spacing": ["error", "never"],
      "yield-star-spacing": ["error", "both"]
    },
  },
  pluginJs.configs.recommended,
];
